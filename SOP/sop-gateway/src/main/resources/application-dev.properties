server.port=8081
# 固定不变
spring.application.name=sop-gateway

# ------- 需要改的配置 -------
# mysql数据库账号
mysql.host=localhost:3306
mysql.username=root
mysql.password=1qaz2wsx

# nacos地址
nacos.url=127.0.0.1:8848

# zipkin服务监控地址，没有开启不用改
zipkin.url=http://127.0.0.1:9411/

# 预发布网关域名
pre.domain=localhost

#redis配置
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
# ------- 需要改的配置end -------

# 入口地址，不用改，默认是/zuul
zuul.servlet-path=/api
# 禁用默认的过滤器，不能删，不用改
zuul.FormBodyWrapperFilter.pre.disable=true
zuul.Servlet30WrapperFilter.pre.disable=true
# 不用改，如果要改，请全局替换修改
zuul.secret=MZZOUSTua6LzApIWXCwEgbBmxSzpzC
# 不用改
zuul.rest-default-version=1.0

# https://blog.csdn.net/qq_36872046/article/details/81058045
# 路由转发超时时间，毫秒，默认值1000，详见：RibbonClientConfiguration.DEFAULT_READ_TIMEOUT。
# 如果微服务端 处理时间过长，会导致ribbon read超时，解决办法将这个值调大一点
ribbon.ReadTimeout=2000
# 设置为true（默认false），则所有请求都重试，默认只支持get请求重试
# 请谨慎设置，因为post请求大多都是写入请求，如果要支持重试，确保服务的幂等性
ribbon.OkToRetryOnAllOperations=false

# nacos cloud配置
spring.cloud.nacos.discovery.server-addr=${nacos.url}
nacos.config.server-addr=${nacos.url}

### 数据库配置
#驱动的全限定类名。默认根据 URL 自动检测。
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#数据库的 JDBC URL
spring.datasource.url=jdbc:mysql://${mysql.host}/sop?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
#数据库的登录用户名
spring.datasource.username=${mysql.username}
#数据库的登录密码
spring.datasource.password=${mysql.password}
#在连接池里的连接返回给调用者或连接池时，要执行的验证 SQL 查询
spring.datasource.validation-query=SELECT 1
#从连接池中借用连接时是否要进行测试
spring.datasource.test-on-borrow: true
#连接池在等待返回连接时，最长等待多少毫秒再抛出异常
spring.datasource.max-wait: 10000
#连接池中的最大活跃连接数
spring.datasource.max-active: 25
#在连接空闲时是否要进行测试
spring.datasource.test-while-idle: true
#在将连接归还到连接池时是否要进行测试
spring.datasource.test-on-return: false
#执行连接验证的间隔时间，单位为毫秒
spring.datasource.validation-interval: 30000
#在两次空闲连接验证、弃用连接清理和空闲池大小调整之间睡眠的毫秒数
spring.datasource.time-between-eviction-runs-millis: 5000
#连接池里始终应该保持的最小连接数(用于DBCP和Tomcat连接池)
spring.datasource.min-idle: 1
#连接池中的最大空闲连接数
spring.datasource.max-idle: 12
#在连接池启动时要建立的连接数
spring.datasource.initial-size: 12
#连接在多少秒后应该考虑弃用
spring.datasource.remove-abandoned-timeout: 7200
#被弃用的连接在到达弃用超时后是否应该被移除
spring.datasource.remove-abandoned: true
#连接的默认事务隔离级别
spring.datasource.default-transaction-isolation: 2
#一个空闲连接被空闲连接释放器（如果存在的话）优雅地释放前，最短会在连接池里停 留多少时间。
spring.datasource.min-evictable-idle-time-millis: 30000

# 不用改
mybatis.fill.com.gitee.fastmybatis.core.support.DateFillInsert=gmt_create
mybatis.fill.com.gitee.fastmybatis.core.support.DateFillUpdate=gmt_modified

# 文件上传配置
spring.servlet.multipart.enabled=true
# 这里设置大一点没关系，真实大小由upload.max-file-size控制
spring.servlet.multipart.max-file-size=50MB

# 允许上传文件大小，不能超过这个值，单位：B,KB,MB
upload.max-file-size=2MB

# zipkin服务跟踪
spring.zipkin.base-url=${zipkin.url}
# 设置sleuth收集信息的比率，默认0.1，最大是1，数字越大越耗性能
spring.sleuth.sampler.probability=1

logging.level.com.gitee=debug