##########################################################
##################  所有profile共有的配置  #################
##########################################################

############################# 访问路径、端口tomcat start ############################
server:
  port: 8092
  servlet:
    context-path: /admin
  tomcat:
    max-threads: 1000
    min-spare-threads: 30
    uri-encoding: UTF-8
############################# 访问路径、端口tomcat end ##############################
#########j2cache integeration
#########useage:@Autowired
##########private CacheChannel cacheChannel;
######## j2CacheRedisTemplate  可以使用这个id获取redisTemplate
j2cache:
  #false 关闭2级缓存 ，true 开启
  l2-cache-open: true
  config-location: classpath:j2cache-${spring.profiles.active}.properties
  open-spring-cache: true
  allow-null-values: true
  cache-clean-mode: passive
  redis-client: lettuce

###################  spring配置  ###################
spring:
  application:
    name: springboot2Demo
  profiles:
    active: dev
  cache:
    type: GENERIC
  mvc:
    static-path-pattern: /static/**
  resources:
    static-locations: classpath:/static/
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  jackson:
    date-format: yyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  banner:
    charset: UTF-8
    location: classpath:config/banner.txt
  ############################### DRUID数据源配置 start ##############################
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      filter:
        slf4j:
          enabled: true
        stat:
          log-slow-sql: true
          merge-sql: true
          slow-sql-millis: 3000
        wall:
          config:
            delete-allow: true
            drop-table-allow: false
          enabled: true
        filters: stat,wall,slf4j
      # 特别注意：java 9以后需要将com.mysql.jdbc.Driver  改为  com.mysql.cj.jdbc.Driver即可
      # 否则报错：Loading class `com.mysql.jdbc.Driver'. This is deprecated.
      driver-class-name: com.mysql.cj.jdbc.Driver
      #基本属性
      #url: jdbc:mysql://127.0.0.1:3306/apiconf?charset=utf8mb4&useSSL=false
      #username: root
      #password: 1qaz2wsx
      #配置初始化大小/最小/最大[仅用于测试，生成环境需要修改哦]
      initial-size: 5
      min-idle: 5
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      #指定获取连接时连接校验的sql查询语句
      validation-query: SELECT 1 FROM DUAL
      #验证连接的有效性
      test-while-idle: true
      #获取连接时候验证，会影响性能（不建议true）
      test-on-borrow: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 128
      stat-view-servlet:
        enabled: true
        login-password: druid123
        login-username: druid
        url-pattern: /druid/*
      test-on-return: false
  ############################### DRUID数据源配置 end ################################
  #mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.spring.demo.entity
  type-enums-package: com.spring.demo.entity.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
  configuration:
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: null
    map-underscore-to-camel-case: true
    cache-enabled: false
    default-enum-type-handler: org.apache.ibatis.type.EnumOrdinalTypeHandler
    lazyLoadingEnabled: true #延时加载的开关
    multipleResultSetsEnabled: true #开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #打印sql语句,调试用

############################## spring-web-demo start #############################
spring-web-demo:
  # jwt配置
  jwt:
    header: token
    secret: 666666
    issuer: spring-web-demo
    subject: spring-web-demo-jwt
    audience: web
    expire-minutes: 2
  # 拦截器配置
  interceptor-config:
    jwt-config:
      enabled: false
      include-path: /**
      exclude-path: /swagger-resources/**,/api-docs/**,/v2/api-docs/**,/login,/verificationCode,/doc/**,/error/**,/docs,/test/**,/resource/**
    permission-config:
      enabled: false
      include-path: /**
      exclude-path: /swagger-resources/**,/api-docs/**,/v2/api-docs/**,/adminLogin,/sysLogin,/login.html,/verificationCode,/doc/**,/error/**,/docs,/resource/**
    token-timeout-config:
      enabled: false
      include-path: /**
      exclude-path: /swagger-resources/**,/api-docs/**,/v2/api-docs/**,/docs,/resource/**
    resource-config:
      enabled: true
      include-path: ${spring-web-demo.resource-access-patterns}
    upload-config:
      enabled: true
      include-path: /upload/**
    download-config:
      enabled: true
      include-path: /download/**
  # 文件上传下载配置
  # 上传路径配置
  upload-path: /opt/upload/
  # 资源访问路径
  resource-access-path: /resource/
  # 资源访问路径匹配：/resource/**
  resource-access-patterns: ${spring-web-demo.resource-access-path}**
  # 资源访问全路径前缀：http://localhost:8888/resource/
  resource-access-url: http://localhost:${server.port}${server.servlet.context-path}${spring-web-demo.resource-access-path}
  # 全局允许上传的类型
  allow-upload-file-extensions: jpg,png,docx,xlsx,pptx,pdf
  allow-download-file-extensions: jpg,png,docx,xlsx,pptx,pdf
############################### spring-web-demo end ###############################


#################################### Swagger start ####################################
# swagger配置
swagger:
  base:
    package: io.geekidea.springbootplus
  contact:
    email: zhaobohao@sohu.com
    name: zhaobohao
    url: ''
  description: ''
  title: spring-boot-web-demo
  url: ''
  version: 1.0
#################################### Swagger end #####################################


################################ Spring boot admin start ################################
---
spring:
  boot:
    admin:
      client:
        url: http://localhost:${server.port}/${server.servlet.context-path}

# 开启和暴露所有端点
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
    logfile:
      enabled: true         #可在线查看日志

# 自定义项目信息，Spring Boot Admin展示使用
info:
  project-groupId: '@project.groupId@'
  project-artifactId: '@project.artifactId@'
  project-name: '@project.name@'
  project-finalName: '@project.build.finalName@'
  project-author: ${swagger.contact.name}
  project-description: '@project.description@'
  project-sourceEncoding: '@project.build.sourceEncoding@'
  project-spring-boot-version: '@spring-boot.version@'
  project-mybatis-plus-version: '@mybatis-plus-boot-starter.version@'
  project-version: '@project.version@'
################################ Spring boot admin end #################################












