#set($dollar="$")
#set($istree=false)
#foreach($field in $!{table.fields})
#if($!{field.name}=="parent_id")
#set($istree=true)
#end
#end
/** eslint-disable */
<template>
    <div class="app-container">
#if($istree)
    <el-container>
        <el-aside id="aside-style" width="10%">
            <el-tree :props="treeProps" :data="treeData" :default-expand-all="true" :highlight-current="true"
                     :expand-on-click-node="false" node-key="id" @node-click="handleNodeClick">
            </el-tree>
        </el-aside>
        <el-container>
#end

    <search-card ref="searchCard" :is-search-card-show="isSearchCardShow" />
    <listTable ref="listTable" :is-search-card-show.sync="isSearchCardShow" />
    <dataForm ref="dataForm" />
#if($istree)
        </el-container>
    </el-container>
#end
  </div>
</template>
<script>
  // 调用相应的api文件中的方法，来操纵数据
#if($istree)
  import {
      getTreeData
  } from '@/api/system/$!{cfg.entityKey}'
#end
  import {
      getDictionary
  }
      from '@/api/system/dict'
  // 按钮的水波纹
  import waves from '@/directive/waves' // Waves directive
  // 引入相应的工具来处理数据转换需求
#if($istree)
  import {
      initTreeData
  } from '@/utils/index'
#end
  // 分页组件
  import searchCard from './components/searchCard' // 搜索组件
  import listTable from './components/listTable' // 列表组件
  import dataForm from './components/dataForm' // form表单组件
  export default {
    // TODO:本页面的名称
    name: '$!{cfg.entityKey}',
    components: {
      searchCard,
      listTable,
      dataForm
    },
    directives: {
      waves
    },
    filters: {

    },
    data() {
      // 初始化整个页面用到的数据
      return {
 #if($istree)
          treeProps: {
              label: 'title',
              leaf: 'isLeaf',
              children: 'children'
          },
          treeData: [],
#end
        isSearchCardShow: false
      }
    },
    watch: {

    },
    // 初始化所有的数据
    created() {
#if($istree)
        this.initTreeData()
#end
    },
    mounted() {

    },
    methods: {
#if($istree)
        handleNodeClick(data) {
            // console.log(data)
            this.$!{dollar}refs.listTable.resetListQuery()
            this.$!{dollar}refs.listTable.listQuery.query.parentId_equal = data.id
            this.$!{dollar}refs.listTable.getList()
        },
        initTreeData() {
            // 第一层结点
            getTreeData().then(response => {
                // console.log(response.data)
                this.treeData = initTreeData(response.data, '数据总览')
            })
           // getDictionary('menu_category').then(response => {
            // this.categoryOptions = response.data
           // })
        }
#end
    }
  }

</script>
<style scoped>
  #aside-style {
    min-width: 160px;
    max-width: 280px;
    background: #ffffff;
    padding: 0;
  }

</style>
